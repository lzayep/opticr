name: "Test&Build"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-container:
    runs-on: ubuntu-latest
    needs: test-and-lint
    steps:
    - uses: actions/checkout@v3
    - id: commit
      uses: pr-mpt/actions-commit-hash@v1
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USER}}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push main
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: lzayep/opticr:${{ steps.commit.outputs.short }}, lzayep/opticr:main, lzayep/opticr:latest

    - name: Build and push branches
      if: github.ref != 'refs/heads/main'
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: lzayep/opticr:${{ steps.commit.outputs.short }}

  test-and-lint:
    runs-on: ubuntu-latest
    container:
      image: lzayep/opticr:ci
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pip3 install poetry -U
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    - name: Install dependencies
      run: |
        poetry install

    - name: lint | black codestyle
      run: |
        make black-test

    # - name: lint | isort import order
    #   run: |
    #     make isort-check

    - name: lint | pylint
      run: |
        make pylint

    - name: lint | pyre-check typing
      run: |
        make pyre-check

    - name: lint | poetry lockfile
      run: |
        make poetry-check

    - name: test | run PyTest
      run: |
        make test
